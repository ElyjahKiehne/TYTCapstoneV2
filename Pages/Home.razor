@page "/"
@using Antlr4.Runtime;
@using System.Text.Json;
@using Antlr4.Runtime.Tree;
@using System.Text;

@* <ASTNodeComponent Node="astRoot" /> *@

<pre>
    @TreeString
</pre>


@code {
    //private ASTNode? astRoot;
    private string? TreeString { get; set; }

    protected override void OnInitialized(){
        string code = @"class HelloWorld {
                            static void main(String[] args) {
                                println 'Hello, World!'
                            }
                        }";

        // Parse the code
        AntlrInputStream inputStream = new AntlrInputStream(code);
        GroovyLexer lexer = new GroovyLexer(inputStream);
        CommonTokenStream tokenStream = new CommonTokenStream(lexer);
        GroovyParser parser = new GroovyParser(tokenStream);
        GroovyParser.CompilationUnitContext tree = parser.compilationUnit();

        TreeString = PrettyPrintTree(tree.ToStringTree(parser));
    }

    public static string PrettyPrintTree(string treeString)
    {
        var result = new StringBuilder();
        int indentLevel = 0;

        foreach (char c in treeString)
        {
            if (c == '(')
            {
                result.AppendLine();
                result.Append(new string(' ', indentLevel * 10));
                result.Append(c);
                indentLevel++;
                result.AppendLine();
                result.Append(new string(' ', indentLevel * 10));
            }
            else if (c == ')')
            {
                indentLevel--;
                result.AppendLine();
                result.Append(new string(' ', indentLevel * 10));
                result.Append(c);
            }
            else if (c == ' ')
            {
                result.AppendLine();
                result.Append(new string(' ', indentLevel * 10));
            }
            else
            {
                result.Append(c);
            }
        }

        return result.ToString();
    }
}